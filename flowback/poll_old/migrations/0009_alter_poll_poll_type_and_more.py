# Generated by Django 4.0.8 on 2023-05-30 11:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('poll', '0008_poll_pinned'),
    ]

    operations = [
        migrations.AlterField(
            model_name='poll',
            name='poll_type',
            field=models.IntegerField(choices=[(1, 'ranking'), (2, 'for_against'), (3, 'schedule'), (4, 'cardinal')]),
        ),
        migrations.AlterUniqueTogether(
            name='pollvotingtyperanking',
            unique_together={('author_delegate', 'priority'), ('author_delegate', 'proposal'), ('author', 'proposal'), ('author', 'priority')},
        ),
        migrations.CreateModel(
            name='PollVotingTypeCardinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.pollvoting')),
                ('author_delegate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.polldelegatevoting')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poll.pollproposal')),
            ],
            options={
                'unique_together': {('author', 'proposal'), ('author_delegate', 'proposal')},
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='pollvotingtypecardinal',
            trigger=pgtrigger.compiler.Trigger(name='protects_author_or_author_delegate', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN ((NEW."author_id" IS NULL AND NEW."author_delegate_id" IS NULL) OR (NEW."author_id" IS NOT NULL AND NEW."author_delegate_id" IS NOT NULL))', func="RAISE EXCEPTION 'pgtrigger: Cannot insert or update rows from % table', TG_TABLE_NAME;", hash='ec44deeb2a748d7a328fdfb52721e57f51925dd4', operation='INSERT OR UPDATE', pgid='pgtrigger_protects_author_or_author_delegate_7b6b6', table='poll_pollvotingtypecardinal', when='BEFORE')),
        ),
    ]
